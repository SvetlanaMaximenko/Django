version: "3.9"

services:

#  web-server:
#    image: nginx:stable-alpine
#    volumes:
#      - "./settings/nginx/default.conf:/etc/nginx/conf.d/default.conf"
#      - "./media:/var/www/media/"
#      - "./static:/var/www/static/"
#
#    ports:
#      - "8000:8000"
#      - "8443:443"
#
#    depends_on:
#      - backend

  database-service:
    image: postgres
    environment:
      POSTGRES_USER: sveta
      POSTGRES_PASSWORD: "sveta"
      POSTGRES_DB: events
      PGDATA: /var/lib/postgresql/data/pgdata

    ports:
      - "5432:5432"

    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      start_period: 5s
      timeout: 10s
      interval: 5s
      retries: 5

    volumes:
      - "./pg_data:/var/lib/postgresql/data"


  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"


  backend:
    build: .
    image: events:v3.0
    command: /bin/sh /app/backend.sh

    environment:
      DJANGO_DEBUG: 0
      DJANGO_SECRET_KEY: 'django-insecure-0b_ad5_p++n0169+3d2v4(nkqd@=iy)ykyvus5g6u_nuqa&s7j'
      PG_USER: sveta
      PG_PASSWORD: "sveta"
      PG_NAME: events
      PG_HOST: database-service  # домен (вместо IP)
      PG_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379

    ports:
      - "8000:8000"

    depends_on:
      database-service:
        condition: service_healthy
      redis:
        condition: service_healthy


  redis:
    image: redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 5


#  celery-woker1: &backend
#    build: .
#    image: board:v3.1
#    command: celery -A board worker -c 2 -l INFO -n worker1
#
#    environment:
#      DJANGO_DEBUG: 0
#      DJANGO_SECRET_KEY: 03je90h90erh28h18hef8hwsdhfohs0adfjh-sadf7asd7
#      PG_USER: pguser
#      PG_PASSWORD: pgpassword
#      PG_NAME: board
#      PG_HOST: database-service  # домен (вместо IP)
#      PG_PORT: 5432
#      REDIS_HOST: redis
#      REDIS_PORT: 6379
#      JWT_SIGNING_KEY: u9yw0e9yr12790341927546129n03491023946190263904
#
#    depends_on:
#      database-service:
#        condition: service_healthy
#      redis:
#        condition: service_healthy


#  celery-woker2:
#    <<: *backend
#    command: celery -A board worker -c 2 -l INFO -n worker2
#
#
#  celery-beat:
#    <<: *backend
#    command: /bin/sh /app/settings/run/celery-beat.sh


#  backend1:
#    <<: *backend
#    command: /bin/sh /app/settings/run/backend.sh
#
#
#  backend2:
#    <<: *backend
#    command: /bin/sh /app/settings/run/backend.sh